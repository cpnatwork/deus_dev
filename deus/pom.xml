<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>inf6.promed</groupId>
	<artifactId>deus</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>DEUS all</name>
			
	<modules>
		<module>core</module>
		<module>ui</module>
	</modules>
	
	<properties>
		<spring.version>2.5.6</spring.version>
	</properties>

	
	<developers>
		<developer>
			<id>cpn</id>
			<name>Christoph Neumann</name>
			<email>christoph.neumann@informatik.uni-erlangen.de</email>
			<url>http://www6.informatik.uni-erlangen.de/people/cpn/</url>
			<organization>Uni Erlangen - Informatik 6</organization>
			<organizationUrl>http://www6.informatik.uni-erlangen.de/</organizationUrl>
		</developer>
		<developer>
			<id>siflramp</id>
			<name>Florian Rampp</name>
			<email>Florian.Rampp@informatik.stud.uni-erlangen.de</email>
		</developer>
	</developers>
	
	<scm>
		<connection>scm:svn:https://svn.origo.ethz.ch/dacus</connection>
		<developerConnection>scm:svn:https://svn.origo.ethz.ch/dacus</developerConnection>
		<tag>HEAD</tag>
	</scm>
	
	<issueManagement>
		<system>Redmine</system>
		<url>faui6p15.informatik.uni-erlangen.de:3000</url>
	</issueManagement>
	
<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--+++ DEPENDENCIES ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	
	<dependencies>
        <!--+++ INTRA-PROJECT DEPENDENCIES ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        
	    <!--+++ INTER-PROJECT DEPENDENCIES ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	    
	    <!--+++ SPRING +++-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.context</artifactId>
			<version>${spring.version}</version>
			<scope>provided</scope>
		</dependency>

		<!--+++ JUNIT +++-->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>
		
		
		<!--+++ LOGGING +++-->
		<!-- Logback ist used as logging backend! -->
<!--		<dependency>-->
<!--			<groupId>ch.qos.logback</groupId>-->
<!--			<artifactId>ch.qos.logback.classic-library</artifactId>-->
<!--			<type>libd</type>-->
<!--			<version>0.9.9</version>-->
<!--		</dependency>-->
		<!-- We use the slf4j api, against which logback is programmed -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>com.springsource.slf4j.api</artifactId>
			<version>1.5.6</version>
		</dependency>
		<!-- for libraries using apache commons logging: make loggers use the slf4j api -->
<!--		<dependency>-->
<!--			<groupId>org.slf4j</groupId>-->
<!--			<artifactId>com.springsource.slf4j.org.apache.commons.logging</artifactId>-->
<!--			<version>1.5.6</version>-->
<!--		</dependency>-->
		<!-- for libraries using java.util.logging: make JUL loggers use the slf4j api -->
<!--		<dependency>-->
<!--			<groupId>org.slf4j</groupId>-->
<!--			<artifactId>com.springsource.slf4j.juli</artifactId>-->
<!--			<version>1.5.6</version>-->
<!--		</dependency>-->
		<!-- for libraries using log4j directly: make loggers use the slf4j api	-->
<!--		<dependency>-->
<!--			<groupId>org.slf4j</groupId>-->
<!--			<artifactId>com.springsource.slf4j.org.apache.log4j</artifactId>-->
<!--			<version>1.5.6</version>-->
<!--		</dependency>-->
	</dependencies>
	
	
	
<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--+++ BUILD +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	
	<build>
	
<!--+++ PLUGINS +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
	
		<plugins>
		
			<!-- MAVEN PROJECT FILE GENERATION -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<additionalProjectFacets>
						<com.springsource.server.bundle>1.0</com.springsource.server.bundle>
					</additionalProjectFacets>
					<additionalBuildcommands>
						<buildcommand>org.eclipse.wst.common.project.facet.core.builder</buildcommand>
						<!--
							since mvn eclipse:m2eclipse which should add m2eclipse support
							to eclipse project ignores all other natures and builders, we
							just use mvn eclipse:eclipse and add m2eclipse nature and
							builder manually here
						-->
						<buildcommand>org.maven.ide.eclipse.maven2Builder</buildcommand>
			            <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<additionalProjectnatures>
						<projectnature>org.maven.ide.eclipse.maven2Nature</projectnature>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
						<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
						<projectnature>com.springsource.server.ide.facet.core.bundlenature</projectnature>
					</additionalProjectnatures>
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
						<classpathContainer>com.springsource.server.ide.jdt.core.MANIFEST_CLASSPATH_CONTAINER</classpathContainer>
					</classpathContainers>
				</configuration>
			</plugin>


			<!-- MANIFEST GENERATION -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<manifestLocation>target/META-INF</manifestLocation>
					<instructions>
						<_include>src/main/resources/META-INF/MANIFEST.MF</_include>
						<Export-Package></Export-Package>
						<Import-Package>*</Import-Package>
					</instructions>
				</configuration>
			</plugin>

			<!-- DEPENDENCY COPYING -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<phase>pre-integration-test</phase>
						<configuration>
<!--							<outputDirectory>${springdmserver.location}/repository/bundles/usr</outputDirectory>-->
							<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>runtime</includeScope>
<!--							<includeTypes>jar</includeTypes>-->
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- COMPILING -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
		
		
			<!-- COPY ARTIFACT TO APP SERVER ON PHASE pre-integration-test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>pre-integration-test</phase>
						<configuration>
							<tasks>
								<copy file="${project.build.directory}/${project.build.finalName}.jar" todir="${springdmserver.location}/pickup"/>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
		</plugins>

<!--+++ RESOURCES ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
			<resource>
				<targetPath>META-INF/spring</targetPath>
				<filtering>false</filtering>
				<directory>${basedir}/src/main/spring</directory>
				<includes>
					<include>*.xml</include>
				</includes>
			</resource>
		</resources>

	</build>

<!--+++ REPOSITORIES +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

	<repositories>
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
		<repository>
			<id>com.springsource.repository.libraries.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/release</url>
		</repository>
		<repository>
			<id>com.springsource.repository.libraries.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/external</url>
		</repository> 
	</repositories>
	
</project>
